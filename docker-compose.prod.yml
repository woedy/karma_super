version: '3.8'

services:
  backend:
    build:
      context: ./karma_backend
      dockerfile: Dockerfile.prod
    container_name: karma_backend_prod
    working_dir: /app
    command: sh -c "python manage.py collectstatic --noinput && gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 3 --threads 2"
    volumes:
      - static_volume:/app/static_cdn/static_root
      - media_volume:/app/media
# No ports needed - Coolify will automatically assign available ports
# and make services accessible through reverse proxy
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=core.settings
      - ENVIRONMENT=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-False}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
    depends_on:
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./logix_frontend
      dockerfile: Dockerfile.prod
    container_name: karma_frontend_prod
# No command needed - Dockerfile handles the build and nginx startup
# No ports needed - Coolify will automatically assign available ports
# and make services accessible through reverse proxy
# No environment variables needed for frontend - nginx handles API routing
    depends_on:
      - backend
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: karma_redis_prod
# No ports needed - Redis is only used internally by other services
    volumes:
      - redis_data:/data
    restart: unless-stopped

  celery:
    build:
      context: ./karma_backend
      dockerfile: Dockerfile.prod
    container_name: karma_celery_prod
    working_dir: /app
    command: celery -A core.celery:app worker --loglevel=info --concurrency=2
    environment:
      - PYTHONPATH=/app
      - DJANGO_SETTINGS_MODULE=core.settings
      - ENVIRONMENT=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-False}
# Celery doesn't need ALLOWED_HOSTS since it's not a web server
    depends_on:
      - redis
      # - backend  # Removed - celery doesn't need backend to be running
    restart: unless-stopped

volumes:
  redis_data:
  static_volume:
  media_volume:
